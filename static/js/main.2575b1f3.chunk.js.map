{"version":3,"sources":["utils/movieAPI.js","normalizers/moviesNormalizer.js","actions/movies.js","actions/quizz.js","components/Question.js","components/PlayButton.js","components/Timer.js","components/Header.js","components/Game.js","components/App.js","reducers/actors.js","reducers/movies.js","reducers/quizz.js","reducers/index.js","index.js"],"names":["API_KEY","ROOT_URL","DISCOVER_MOVIE_ROOT_URL","concat","DISCOVER_MOVIE_URL","IMAGE_W500_ROOT_URL","getMoviesFromMovieDB","fetch","then","result","json","data","normalizeMovies","moviesFromMovieDB","movies","results","actorsPromises","map","movie","getActors","id","Promise","all","actors","index","title","slice","poster","poster_path","movieId","MOVIE_CREDITS_URL","normalizeActors","actorsFromMovieDB","cast","actor","schema","Entity","Array","define","moviesRetrieved","type","payload","getRandomInt","max","Math","floor","random","getRandomActorIndexNotInMovie","allActorIds","movieActorIds","actorIdsNotInMovie","filter","actorId","includes","length","movieActorId","findIndex","getRandomActorIndexInMovie","actorIdsInMovie","isActorInMovie","state","byId","find","questionsRetrieved","questions","getQuestions","allIds","randomActorIndex","splice","name","answer","a","sort","b","Question","_ref","_ref$question","question","onClick","react_default","createElement","className","src","alt","PlayButton","props","children","Timer","this","seconds","Component","Header","score","buttonLabel","src_components_Timer","undefined","components_PlayButton","Game","questionIndex","elapsed","handleAnswer","_this","answerQuestion","quizz","setState","nextQuestion","restartQuizz","retrieveQuestions","timer","setInterval","tick","stopTimer","clearInterval","Date","start","_this2","_this$props$quizz","gameState","round","toFixed","components_Header","components_Question","mapDispatchToProps","dispatch","getState","connect","App","retrieveMovies","components_Game","originalMovies","normalizr","combineReducers","arguments","action","entities","Object","keys","key","parseInt","loading","objectSpread","end","answers","toConsumableArray","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2575b1f3.chunk.js","sourcesContent":["const API_KEY = 'a0acf48d85383e412e1e53f18b225c6a';\nconst ROOT_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_ROOT_URL = 'https://image.tmdb.org';\nconst DISCOVER_MOVIE_ROOT_URL = `${ROOT_URL}/discover/movie`;\nconst DISCOVER_MOVIE_URL = `${DISCOVER_MOVIE_ROOT_URL}?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`;\nconst MOVIE_CREDITS_URL = movieId =>\n  `${ROOT_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n\nconst IMAGE_W500_ROOT_URL = `${IMAGE_ROOT_URL}/t/p/w500`;\n\nexport const getMovies = () => {\n  return getMoviesFromMovieDB();\n};\n\nconst getMoviesFromMovieDB = () => {\n  return fetch(DISCOVER_MOVIE_URL)\n    .then(result => result.json())\n    .then(data => {\n      return normalizeMovies(data);\n    });\n};\n\nconst normalizeMovies = moviesFromMovieDB => {\n  const { results: movies } = moviesFromMovieDB;\n  const actorsPromises = movies.map(movie => getActors(movie.id));\n  return Promise.all(actorsPromises).then(actors => {\n    return movies.map((movie, index) => ({\n      id: movie.id,\n      title: movie.title,\n      //  Return only the 2 first actors in order to limit the number of combinations for questions\n      actors: actors[index].slice(0,2),\n      poster: `${IMAGE_W500_ROOT_URL}${movie.poster_path}`\n    }));\n  });\n};\n\nexport const getActors = movieId => {\n  return fetch(MOVIE_CREDITS_URL(movieId))\n    .then(result => result.json())\n    .then(data => {\n      return normalizeActors(data);\n    });\n};\n\nconst normalizeActors = actorsFromMovieDB => {\n  const { cast: actors } = actorsFromMovieDB;\n  return actors;\n};\n","import { normalize as normalizr, schema } from 'normalizr';\nconst actor = new schema.Entity('actors');\nconst actors = new schema.Array(actor);\nactors.define({ actors });\nconst movie = new schema.Entity('movies', {\n  actors: [actor]\n});\n\nexport const normalize = originalMovies => normalizr(originalMovies, new schema.Array(movie));\n","import { getMovies } from '../utils/movieAPI';\nimport { normalize } from '../normalizers/moviesNormalizer';\nexport const RETRIEVE_MOVIES = 'RETRIEVE_MOVIES';\nexport const MOVIES_RETRIEVED = 'MOVIES_RETRIEVED';\n\nexport const retrieveMovies = () => dispatch => {\n  dispatch({ type: RETRIEVE_MOVIES });\n  return getMovies().then(movies => dispatch(moviesRetrieved(normalize(movies))));\n};\n\nconst moviesRetrieved = movies => ({\n  type: MOVIES_RETRIEVED,\n  payload: movies\n});\n","export const ANSWER_QUESTION = 'ANSWER_QUESTION';\nexport const RETRIEVE_QUESTIONS = 'RETRIEVE_QUESTIONS';\nexport const QUESTIONS_RETRIEVED = 'QUESTIONS_RETRIEVED';\n\nexport const answerQuestion = (question, answer) => ({\n  type: ANSWER_QUESTION,\n  payload: { question, answer }\n});\n\nconst shuffleArray = array =>\n  array\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\nconst getRandomInt = max => Math.floor(Math.random() * max);\n\nconst getRandomActorIndexNotInMovie = (allActorIds, movieActorIds) => {\n  let actorIdsNotInMovie = allActorIds.filter(\n    actorId => !movieActorIds.includes(actorId)\n  );\n  if (actorIdsNotInMovie.length === 0) {\n    actorIdsNotInMovie = allActorIds;\n  }\n  const index = getRandomInt(actorIdsNotInMovie.length);\n  const movieActorId = actorIdsNotInMovie[index];\n  return allActorIds.findIndex(actorId => movieActorId === actorId);\n};\n\nconst getRandomActorIndexInMovie = (allActorIds, movieActorIds) => {\n  const actorIdsInMovie = allActorIds.filter(actorId =>\n    movieActorIds.includes(actorId)\n  );\n  if (actorIdsInMovie.length === 0) {\n    return getRandomActorIndexNotInMovie(allActorIds, movieActorIds);\n  }\n  const index = getRandomInt(actorIdsInMovie.length);\n  const movieActorId = actorIdsInMovie[index];\n  return allActorIds.findIndex(actorId => movieActorId === actorId);\n};\n\nconst isActorInMovie = (state, actorId, movieId) => {\n  return state.movies.byId[movieId].actors.find(id => id === actorId)\n    ? 'YES'\n    : 'NO';\n};\n\nexport const retrieveQuestions = () => (dispatch, getState) => {\n  dispatch({ type: RETRIEVE_QUESTIONS });\n  return dispatch(questionsRetrieved(getQuestions(getState())));\n};\n\nconst questionsRetrieved = questions => ({\n  type: QUESTIONS_RETRIEVED,\n  payload: questions\n});\n\nconst getQuestions = state => {\n  const movies = state.movies.allIds.map(id => state.movies.byId[id]);\n  let allActorIds = state.actors.allIds.slice();\n  let questions = movies.map((movie, index) => {\n    const func =\n      index % 2 ? getRandomActorIndexNotInMovie : getRandomActorIndexInMovie;\n    const randomActorIndex = func(allActorIds, movie.actors);\n    const actor = state.actors.byId[allActorIds[randomActorIndex]];\n    allActorIds.splice(randomActorIndex, 1);\n    return {\n      movie: movie.title,\n      actor: actor.name,\n      poster: movie.poster,\n      answer: isActorInMovie(state, actor.id, movie.id)\n    };\n  });\n  // Shuffle the questions to not have a YES-NO-YES-NO... series\n  return shuffleArray(questions);\n};\n","import React from 'react';\n\nconst Question = ({ question: { movie, poster, actor }, onClick }) => {\n  return (\n    <div className=\"text-center\">\n      <div className=\"text-center\">\n        <h2>Movie {movie}</h2>\n      </div>\n      <img className=\"rounded\" src={poster} alt={movie} />\n      <div className=\"text-center\">\n        <h2>Actor {actor}</h2>\n      </div>\n      <div className=\"text-center\">\n        <button className=\"btn btn-success m-3\" onClick={() => onClick('YES')}>\n          YES\n        </button>\n        <button className=\"btn btn-warning m-3\" onClick={() => onClick('NO')}>\n          NO\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Question;\n","import React from 'react';\n\nconst PlayButton = (props) => {\n  return <button className=\"btn btn-primary\" onClick={props.onClick}>{props.children}</button>;\n};\n\nexport default PlayButton;","import React, {Component} from 'react';\nimport './Timer.css';\n\nclass Timer extends Component {\n  render() {\n    return <div className=\"segment7\">{this.props.seconds}</div>\n  }\n}\n\nexport default Timer;","import React from 'react';\nimport PlayButton from './PlayButton';\nimport Timer from './Timer';\n\nconst Header = ({seconds, score, onClick, buttonLabel, children}) => {\n  return (\n    <div>\n      <Timer seconds={seconds}/>\n      {children && <h1>{children}</h1>}\n      {score !== undefined && <h1>Your score: {score}</h1>}\n      {buttonLabel && <PlayButton onClick={onClick}>{buttonLabel}</PlayButton>}\n    </div>\n  );\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { retrieveQuestions, answerQuestion } from '../actions/quizz';\nimport Question from './Question';\nimport Header from './Header';\n\nclass Game extends Component {\n  state = {\n    questionIndex: 0,\n    elapsed: 0\n  };\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  tick() {\n    this.setState({ elapsed: new Date() - this.props.quizz.start });\n  }\n\n  handleAnswer = answer => {\n    this.props.answerQuestion(\n      this.props.quizz.questions[this.props.quizz.score],\n      answer\n    );\n    this.setState(state => ({ questionIndex: state.questionIndex + 1 }));\n  };\n\n  nextQuestion = () => {\n    if (this.state.questionIndex < this.props.quizz.questions.length) {\n      return this.props.quizz.questions[this.state.questionIndex];\n    } else {\n      return null;\n    }\n  };\n\n  restartQuizz = () => {\n    this.setState({ questionIndex: 0, elapsed: 0 });\n    this.props.retrieveQuestions();\n    this.timer = setInterval(() => this.tick(), 50);\n  };\n\n  render() {\n    const {\n      quizz: { gameState, score }\n    } = this.props;\n    const elapsed = Math.round(this.state.elapsed / 100);\n    const seconds = (elapsed / 10).toFixed(1);\n    if (gameState === 'INIT') {\n      return (\n        <Header onClick={() => this.restartQuizz()} buttonLabel={'PLAY'}>\n          WELCOME TO THE MOVIE QUIZZ\n        </Header>\n      );\n    } else if (gameState === 'GAME_OVER') {\n      this.stopTimer();\n      return (\n        <Header\n          onClick={() => this.restartQuizz()}\n          seconds={seconds}\n          score={score}\n          buttonLabel={'PLAY AGAIN'}\n        >\n          GAME OVER\n        </Header>\n      );\n    }\n    const nextQuestion = this.nextQuestion();\n    if (!nextQuestion) {\n      this.stopTimer();\n      return (\n        <Header\n          onClick={() => this.restartQuizz()}\n          seconds={seconds}\n          score={score}\n          buttonLabel={'PLAY AGAIN'}\n        >\n          YOU WON\n        </Header>\n      );\n    } else {\n      return (\n        <div>\n          <Header score={score} seconds={seconds} />\n          <Question onClick={this.handleAnswer} question={nextQuestion} />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  quizz: state.quizz\n});\n\nconst mapDispatchToProps = {\n  retrieveQuestions,\n  answerQuestion\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { retrieveMovies } from '../actions/movies';\nimport Game from './Game';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.retrieveMovies();\n  }\n  render() {\n    return (\n      <div className=\"text-center mt-5\">\n        <Game />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movies,\n  };\n};\n\nconst mapDispatchToProps = {\n  retrieveMovies\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { combineReducers } from 'redux';\nimport { RETRIEVE_MOVIES, MOVIES_RETRIEVED } from '../actions/movies';\n\nconst byId = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case RETRIEVE_MOVIES:\n      return {};\n    case MOVIES_RETRIEVED:\n      return payload.entities.actors || {};\n    default:\n      return state;\n  }\n};\n\nconst allIds = (state = [], action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case RETRIEVE_MOVIES:\n      return [];\n    case MOVIES_RETRIEVED: {\n      return (payload.entities.actors && Object.keys(payload.entities.actors).map(key => parseInt(key))) || [];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  byId,\n  allIds\n});\n","import { combineReducers } from 'redux';\nimport { RETRIEVE_MOVIES, MOVIES_RETRIEVED } from '../actions/movies';\n\nconst byId = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case RETRIEVE_MOVIES:\n      return {};\n    case MOVIES_RETRIEVED:\n      return payload.entities.movies || {};\n    default:\n      return state;\n  }\n};\n\nconst allIds = (state = [], action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case RETRIEVE_MOVIES:\n      return [];\n    case MOVIES_RETRIEVED: {\n      return payload.result || [];\n    }\n    default:\n      return state;\n  }\n};\n\nconst loading = (state = false, action) => action.type === RETRIEVE_MOVIES;\n\nexport default combineReducers({\n  byId,\n  allIds,\n  loading\n});\n","import {\n  ANSWER_QUESTION,\n  RETRIEVE_QUESTIONS,\n  QUESTIONS_RETRIEVED\n} from '../actions/quizz';\n\nexport const quizz = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case QUESTIONS_RETRIEVED:\n      return {\n        ...state,\n        gameState: 'PLAYING',\n        questions: payload,\n        start: new Date(),\n        end: undefined\n      };\n    case RETRIEVE_QUESTIONS: {\n      return {\n        questions: [],\n        gameState: 'INIT',\n        answers: [],\n        score: 0,\n        start: undefined,\n        end: undefined\n      };\n    }\n    case ANSWER_QUESTION:\n      return {\n        ...state,\n        answers: [...state.answers, payload.answer],\n        score:\n          payload.question.answer === payload.answer\n            ? state.score + 1\n            : state.score,\n        gameState:\n          payload.question.answer !== payload.answer\n            ? 'GAME_OVER'\n            : state.gameState,\n        end: payload.question.answer !== payload.answer ? new Date() : state.end\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport actors from './actors';\nimport movies from './movies';\nimport * as quizz from './quizz';\n\nexport default combineReducers({\n  movies,\n  actors,\n  ...quizz\n});\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport reducers from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst defaultState = {\n  movies: {\n    byId: {},\n    allIds: []\n  },\n  actors: {\n    byId: {},\n    allIds: []\n  },\n  quizz: {\n    questions: [],\n    answers: [],\n    score: 0,\n    gameState: 'INIT',\n    start: 0,\n    end: 0\n  }\n};\n\nconst store = createStore(\n  reducers,\n  defaultState,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App className=\"container\" />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}